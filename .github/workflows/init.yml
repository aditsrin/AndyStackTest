name: Stack Initialize
on:
  workflow_dispatch:
jobs:
  dump_info:
    name: Dump workflow information
    runs-on: ubuntu-latest
    steps:
      - name: Acknowledge
        uses: actions/github-script@v5
        with:
          script: |

            const body = `
            I am actively looking into the following and will let you know how it goes!

            <details>
              <summary>GitHub Event Payload</summary>

              \`\`\`json
              ${{ toJson(github.event) }}
              \`\`\`
            </details>
            `

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

  init_example_a_engagement:
    name: Initialize Example A engagement
    runs-on: ubuntu-latest
    #  if: ${{ github.event.inputs.init_example_a_engagement }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create project board
        id: project
        run: |
          project_id=$(gh api repos/{owner}/{repo}/projects --field name="Example A Engagement" --jq '.id')

          echo "::set-output name=project_id::$project_id"

      - name: Create project column(s)
        env:
          PROJECT: ${{ steps.project.outputs.project_id }}
        run: |
          gh api projects/{project}/columns --field project=$PROJECT --field name="Backlog"
          gh api projects/{project}/columns --field project=$PROJECT --field name="To Do"
          gh api projects/{project}/columns --field project=$PROJECT --field name="In Progress"
          gh api projects/{project}/columns --field project=$PROJECT --field name="Done"